{"ast":null,"code":"// Login.js:\nimport React,{useState}from'react';import{Form,Button,Container,Row,Col}from'react-bootstrap';import{withLDConsumer}from\"launchdarkly-react-client-sdk\";import QrCode from'./Qrcode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{flags,variant}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const handleSubmit=event=>{event.preventDefault();console.log('Login attempted with:',{email,password});// Here you would typically send a request to your server\n};return/*#__PURE__*/_jsxs(Container,{className:\"loginForm\",children:[/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center mt-5\",children:/*#__PURE__*/_jsxs(Col,{xs:12,md:6,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-4\",children:\"Login\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"w-100\",children:\"Login\"})]})]})}),/*#__PURE__*/_jsx(QrCode,{value:variant})]});}export default withLDConsumer()(Login);","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","withLDConsumer","QrCode","jsx","_jsx","jsxs","_jsxs","Login","_ref","flags","variant","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","console","log","className","children","xs","md","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target"],"sources":["/Users/sfalzon/Github/ld-multidemo/src/Components/Login.js"],"sourcesContent":["// Login.js:\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport QrCode from './Qrcode';\n\nfunction Login({flags, variant}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Login attempted with:', { email, password });\n    // Here you would typically send a request to your server\n  };\n\n  return (\n    <Container className=\"loginForm\">\n      <Row className=\"justify-content-md-center mt-5\">\n        <Col xs={12} md={6}>\n          <h2 className=\"text-center mb-4\">Login</h2>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n              Login\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n      \n      <QrCode value={variant}/>\n  \n  \n    </Container>\n  );\n}\n\nexport default withLDConsumer()(Login);"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,MAAM,CAAEC,SAAS,CAAEC,GAAG,CAAEC,GAAG,KAAQ,iBAAiB,CACnE,OAASC,cAAc,KAAQ,+BAA+B,CAC9D,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAmB,IAAlB,CAACC,KAAK,CAAEC,OAAO,CAAC,CAAAF,IAAA,CAC7B,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACkB,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAoB,YAAY,CAAIC,KAAK,EAAK,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAE,CAAER,KAAK,CAAEE,QAAS,CAAC,CAAC,CACzD;AACF,CAAC,CAED,mBACEP,KAAA,CAACR,SAAS,EAACsB,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC9BjB,IAAA,CAACL,GAAG,EAACqB,SAAS,CAAC,gCAAgC,CAAAC,QAAA,cAC7Cf,KAAA,CAACN,GAAG,EAACsB,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,eACjBjB,IAAA,OAAIgB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cAC3Cf,KAAA,CAACV,IAAI,EAAC4B,QAAQ,CAAET,YAAa,CAAAM,QAAA,eAC3Bf,KAAA,CAACV,IAAI,CAAC6B,KAAK,EAACL,SAAS,CAAC,MAAM,CAACM,SAAS,CAAC,gBAAgB,CAAAL,QAAA,eACrDjB,IAAA,CAACR,IAAI,CAAC+B,KAAK,EAAAN,QAAA,CAAC,eAAa,CAAY,CAAC,cACtCjB,IAAA,CAACR,IAAI,CAACgC,OAAO,EACXC,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,aAAa,CACzBC,KAAK,CAAEpB,KAAM,CACbqB,QAAQ,CAAGC,CAAC,EAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC3C,CAAC,EACQ,CAAC,cAEbzB,KAAA,CAACV,IAAI,CAAC6B,KAAK,EAACL,SAAS,CAAC,MAAM,CAACM,SAAS,CAAC,mBAAmB,CAAAL,QAAA,eACxDjB,IAAA,CAACR,IAAI,CAAC+B,KAAK,EAAAN,QAAA,CAAC,UAAQ,CAAY,CAAC,cACjCjB,IAAA,CAACR,IAAI,CAACgC,OAAO,EACXC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGC,CAAC,EAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,EACQ,CAAC,cAEb3B,IAAA,CAACP,MAAM,EAACa,OAAO,CAAC,SAAS,CAACmB,IAAI,CAAC,QAAQ,CAACT,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,OAE1D,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,CACH,CAAC,cAENjB,IAAA,CAACF,MAAM,EAAC6B,KAAK,CAAErB,OAAQ,CAAC,CAAC,EAGhB,CAAC,CAEhB,CAEA,cAAe,CAAAT,cAAc,CAAC,CAAC,CAACM,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}