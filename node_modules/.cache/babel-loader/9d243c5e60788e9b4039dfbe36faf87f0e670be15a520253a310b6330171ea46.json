{"ast":null,"code":"import * as e from \"react\";\nimport t, { createContext as r, Component as n, useState as o, useEffect as i, useContext as s } from \"react\";\nimport { initialize as a } from \"launchdarkly-js-client-sdk\";\nexport * from \"launchdarkly-js-client-sdk\";\nimport l from \"lodash.camelcase\";\nimport c from \"hoist-non-react-statics\";\nconst p = {\n    useCamelCaseFlagKeys: !0,\n    sendEventsOnFlagRead: !0\n  },\n  u = r({\n    flags: {},\n    flagKeyMap: {},\n    ldClient: void 0\n  }),\n  {\n    Provider: f,\n    Consumer: d\n  } = u,\n  y = e => {\n    var t;\n    return null != (t = e.context) ? t : e.user;\n  },\n  h = e => {\n    const t = {};\n    for (const r in e) 0 !== r.indexOf(\"$\") && (t[l(r)] = e[r]);\n    return t;\n  },\n  g = (e, t) => {\n    const r = {};\n    for (const n in e) t && void 0 === t[n] || (r[n] = e[n].current);\n    return r;\n  },\n  O = (e, t) => {\n    const r = e.allFlags();\n    return t ? Object.keys(t).reduce((e, n) => (e[n] = Object.prototype.hasOwnProperty.call(r, n) ? r[n] : t[n], e), {}) : r;\n  };\nfunction b(e, t, r = p, n) {\n  const o = function (e, t) {\n      if (void 0 === t) return e;\n      return Object.keys(t).reduce((t, r) => (m(e, r) && (t[r] = e[r]), t), {});\n    }(t, n),\n    {\n      useCamelCaseFlagKeys: i = !0\n    } = r,\n    [s, a = {}] = i ? function (e) {\n      const t = {},\n        r = {};\n      for (const n in e) {\n        if (0 === n.indexOf(\"$\")) continue;\n        const o = l(n);\n        t[o] = e[n], r[o] = n;\n      }\n      return [t, r];\n    }(o) : [o];\n  return {\n    flags: r.sendEventsOnFlagRead ? v(e, s, a, i) : s,\n    flagKeyMap: a\n  };\n}\nfunction m(e, t) {\n  return Object.prototype.hasOwnProperty.call(e, t);\n}\nfunction v(e, t, r, n) {\n  return new Proxy(t, {\n    get(t, o, i) {\n      const s = Reflect.get(t, o, i),\n        a = n && m(r, o) || m(t, o);\n      if (\"symbol\" == typeof o || !a) return s;\n      if (void 0 === s) return;\n      const l = n ? r[o] : o;\n      return e.variation(l, s);\n    }\n  });\n}\nh.camelCaseKeys = h;\nconst j = {\n  wrapperName: \"react-client-sdk\",\n  wrapperVersion: \"3.4.0\",\n  sendEventsOnlyForVariation: !0\n};\nvar w = Object.defineProperty,\n  C = Object.defineProperties,\n  P = Object.getOwnPropertyDescriptors,\n  x = Object.getOwnPropertySymbols,\n  F = Object.prototype.hasOwnProperty,\n  E = Object.prototype.propertyIsEnumerable,\n  S = (e, t, r) => t in e ? w(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  }) : e[t] = r,\n  k = (e, t) => {\n    for (var r in t || (t = {})) F.call(t, r) && S(e, r, t[r]);\n    if (x) for (var r of x(t)) E.call(t, r) && S(e, r, t[r]);\n    return e;\n  },\n  D = (e, t) => C(e, P(t)),\n  I = (e, t, r) => new Promise((n, o) => {\n    var i = e => {\n        try {\n          a(r.next(e));\n        } catch (e) {\n          o(e);\n        }\n      },\n      s = e => {\n        try {\n          a(r.throw(e));\n        } catch (e) {\n          o(e);\n        }\n      },\n      a = e => e.done ? n(e.value) : Promise.resolve(e.value).then(i, s);\n    a((r = r.apply(e, t)).next());\n  });\nclass K extends n {\n  constructor(e) {\n    super(e), this.getReactOptions = () => k(k({}, p), this.props.reactOptions), this.subscribeToChanges = e => {\n      const {\n        flags: t\n      } = this.props;\n      e.on(\"change\", r => {\n        const n = this.getReactOptions(),\n          o = g(r, t),\n          i = k(k({}, this.state.unproxiedFlags), o);\n        Object.keys(o).length > 0 && this.setState(r => k(D(k({}, r), {\n          unproxiedFlags: i\n        }), b(e, i, n, t)));\n      });\n    }, this.onFailed = (e, t) => {\n      this.setState(e => D(k({}, e), {\n        error: t\n      }));\n    }, this.onReady = (e, t, r) => {\n      const n = O(e, r);\n      this.setState(o => k(D(k({}, o), {\n        unproxiedFlags: n\n      }), b(e, n, t, r)));\n    }, this.prepareLDClient = () => I(this, null, function* () {\n      var e;\n      const {\n        clientSideID: t,\n        flags: r,\n        options: n\n      } = this.props;\n      let o = yield this.props.ldClient;\n      const i = this.getReactOptions();\n      let s,\n        l = this.state.unproxiedFlags;\n      if (o) l = O(o, r);else {\n        const c = null != (e = y(this.props)) ? e : {\n          anonymous: !0,\n          kind: \"user\"\n        };\n        o = a(t, c, k(k({}, j), n));\n        try {\n          yield o.waitForInitialization(this.props.timeout), l = O(o, r);\n        } catch (e) {\n          s = e, (null == s ? void 0 : s.name.toLowerCase().includes(\"timeout\")) && (o.on(\"failed\", this.onFailed), o.on(\"ready\", () => {\n            this.onReady(o, i, r);\n          }));\n        }\n      }\n      this.setState(e => D(k(D(k({}, e), {\n        unproxiedFlags: l\n      }), b(o, l, i, r)), {\n        ldClient: o,\n        error: s\n      })), this.subscribeToChanges(o);\n    });\n    const {\n      options: t\n    } = e;\n    if (this.state = {\n      flags: {},\n      unproxiedFlags: {},\n      flagKeyMap: {}\n    }, t) {\n      const {\n        bootstrap: e\n      } = t;\n      if (e && \"localStorage\" !== e) {\n        const {\n          useCamelCaseFlagKeys: t\n        } = this.getReactOptions();\n        this.state = {\n          flags: t ? h(e) : e,\n          unproxiedFlags: e,\n          flagKeyMap: {}\n        };\n      }\n    }\n  }\n  componentDidMount() {\n    return I(this, null, function* () {\n      const {\n        deferInitialization: e\n      } = this.props;\n      e && !y(this.props) || (yield this.prepareLDClient());\n    });\n  }\n  componentDidUpdate(e) {\n    return I(this, null, function* () {\n      const {\n          deferInitialization: t\n        } = this.props,\n        r = !y(e) && y(this.props);\n      t && r && (yield this.prepareLDClient());\n    });\n  }\n  render() {\n    const {\n      flags: e,\n      flagKeyMap: r,\n      ldClient: n,\n      error: o\n    } = this.state;\n    return t.createElement(f, {\n      value: {\n        flags: e,\n        flagKeyMap: r,\n        ldClient: n,\n        error: o\n      }\n    }, this.props.children);\n  }\n}\nvar R = Object.defineProperty,\n  M = Object.defineProperties,\n  L = Object.getOwnPropertyDescriptors,\n  z = Object.getOwnPropertySymbols,\n  T = Object.prototype.hasOwnProperty,\n  V = Object.prototype.propertyIsEnumerable,\n  $ = (e, t, r) => t in e ? R(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  }) : e[t] = r,\n  N = (e, t) => {\n    for (var r in t || (t = {})) T.call(t, r) && $(e, r, t[r]);\n    if (z) for (var r of z(t)) V.call(t, r) && $(e, r, t[r]);\n    return e;\n  };\nfunction U(t) {\n  return function (r) {\n    const {\n        reactOptions: n\n      } = t,\n      o = N(N({}, p), n),\n      i = (s = N({}, t), M(s, L({\n        reactOptions: o\n      })));\n    var s;\n    function a(t) {\n      return e.createElement(K, N({}, i), e.createElement(r, N({}, t)));\n    }\n    return c(a, r), a;\n  };\n}\nvar q = Object.defineProperty,\n  A = Object.defineProperties,\n  B = Object.getOwnPropertyDescriptors,\n  G = Object.getOwnPropertySymbols,\n  H = Object.prototype.hasOwnProperty,\n  J = Object.prototype.propertyIsEnumerable,\n  Q = (e, t, r) => t in e ? q(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  }) : e[t] = r,\n  W = (e, t) => {\n    for (var r in t || (t = {})) H.call(t, r) && Q(e, r, t[r]);\n    if (G) for (var r of G(t)) J.call(t, r) && Q(e, r, t[r]);\n    return e;\n  },\n  X = (e, t) => A(e, B(t));\nfunction Y(e) {\n  return r = this, n = null, s = function* () {\n    var r, n;\n    const {\n        clientSideID: s,\n        flags: l,\n        options: c,\n        reactOptions: u\n      } = e,\n      d = W(W({}, p), u),\n      h = null != (r = y(e)) ? r : {\n        anonymous: !0,\n        kind: \"user\"\n      };\n    let m,\n      v = {};\n    const w = null != (n = yield e.ldClient) ? n : a(s, h, W(W({}, j), c));\n    try {\n      yield w.waitForInitialization(e.timeout), v = O(w, l);\n    } catch (e) {\n      m = e;\n    }\n    const C = (null == c ? void 0 : c.bootstrap) && \"localStorage\" !== c.bootstrap ? c.bootstrap : v;\n    return ({\n      children: e\n    }) => {\n      const [r, n] = o(() => X(W({\n        unproxiedFlags: C\n      }, b(w, C, d, l)), {\n        ldClient: w,\n        error: m\n      }));\n      i(() => {\n        function e(e) {\n          const t = g(e, l);\n          Object.keys(t).length > 0 && n(e => {\n            const r = W(W({}, e.unproxiedFlags), t);\n            return W(X(W({}, e), {\n              unproxiedFlags: r\n            }), b(w, r, d, l));\n          });\n        }\n        function t() {\n          const e = O(w, l);\n          n(t => W(X(W({}, t), {\n            unproxiedFlags: e\n          }), b(w, e, d, l)));\n        }\n        function r(e) {\n          n(t => X(W({}, t), {\n            error: e\n          }));\n        }\n        return w.on(\"change\", e), (null == m ? void 0 : m.name.toLowerCase().includes(\"timeout\")) && (w.on(\"failed\", r), w.on(\"ready\", t)), function () {\n          w.off(\"change\", e), w.off(\"failed\", r), w.off(\"ready\", t);\n        };\n      }, []);\n      const s = ((e, t) => {\n        var r = {};\n        for (var n in e) H.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);\n        if (null != e && G) for (var n of G(e)) t.indexOf(n) < 0 && J.call(e, n) && (r[n] = e[n]);\n        return r;\n      })(r, [\"unproxiedFlags\"]);\n      return t.createElement(f, {\n        value: s\n      }, e);\n    };\n  }, new Promise((e, t) => {\n    var o = e => {\n        try {\n          a(s.next(e));\n        } catch (e) {\n          t(e);\n        }\n      },\n      i = e => {\n        try {\n          a(s.throw(e));\n        } catch (e) {\n          t(e);\n        }\n      },\n      a = t => t.done ? e(t.value) : Promise.resolve(t.value).then(o, i);\n    a((s = s.apply(r, n)).next());\n  });\n  var r, n, s;\n}\nvar Z = Object.defineProperty,\n  _ = Object.getOwnPropertySymbols,\n  ee = Object.prototype.hasOwnProperty,\n  te = Object.prototype.propertyIsEnumerable,\n  re = (e, t, r) => t in e ? Z(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  }) : e[t] = r,\n  ne = (e, t) => {\n    for (var r in t || (t = {})) ee.call(t, r) && re(e, r, t[r]);\n    if (_) for (var r of _(t)) te.call(t, r) && re(e, r, t[r]);\n    return e;\n  };\nfunction oe(t = {\n  clientOnly: !1\n}) {\n  return function (r) {\n    return n => e.createElement(d, null, ({\n      flags: o,\n      ldClient: i\n    }) => t.clientOnly ? e.createElement(r, ne({\n      ldClient: i\n    }, n)) : e.createElement(r, ne({\n      flags: o,\n      ldClient: i\n    }, n)));\n  };\n}\nconst ie = () => {\n    const {\n      flags: e\n    } = s(u);\n    return e;\n  },\n  se = () => {\n    const {\n      ldClient: e\n    } = s(u);\n    return e;\n  };\nfunction ae() {\n  const {\n    error: e\n  } = s(u);\n  return e;\n}\nexport { K as LDProvider, Y as asyncWithLDProvider, h as camelCaseKeys, p as defaultReactOptions, ie as useFlags, se as useLDClient, ae as useLDClientError, oe as withLDConsumer, U as withLDProvider };","map":{"version":3,"names":["p","useCamelCaseFlagKeys","sendEventsOnFlagRead","u","r","flags","flagKeyMap","ldClient","Provider","f","Consumer","d","y","e","t","context","user","h","indexOf","l","g","getFlattenedFlagsFromChangeset","n","current","O","fetchFlags","allFlags","Object","keys","reduce","prototype","hasOwnProperty","call","b","o","m","i","s","a","v","Proxy","get","Reflect","variation","camelCaseKeys","j","wrapperName","wrapperVersion","sendEventsOnlyForVariation","w","defineProperty","C","defineProperties","P","getOwnPropertyDescriptors","x","getOwnPropertySymbols","F","E","propertyIsEnumerable","S","enumerable","configurable","writable","value","k","D","I","Promise","next","throw","done","resolve","then","apply","K","constructor","getReactOptions","props","reactOptions","subscribeToChanges","on","state","unproxiedFlags","length","setState","onFailed","error","onReady","prepareLDClient","clientSideID","options","c","anonymous","kind","waitForInitialization","timeout","name","toLowerCase","includes","bootstrap","componentDidMount","deferInitialization","componentDidUpdate","render","createElement","children","R","M","L","z","T","V","$","N","U","q","A","B","G","H","J","Q","W","X","Y","off","Z","_","ee","te","re","ne","oe","clientOnly","ie","useFlags","se","useLDClient","ae","LDProvider","asyncWithLDProvider","defaultReactOptions","useLDClientError","withLDConsumer","withLDProvider"],"sources":["/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/types.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/context.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/utils.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/getFlagsProxy.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/wrapperOptions.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/provider.tsx","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/withLDProvider.tsx","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/asyncWithLDProvider.tsx","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/withLDConsumer.tsx","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/useFlags.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/useLDClient.ts","/Users/sfalzon/Github/ld-multidemo/node_modules/launchdarkly-react-client-sdk/src/useLDClientError.tsx"],"sourcesContent":["import { LDClient, LDContext, LDFlagSet, LDOptions } from 'launchdarkly-js-client-sdk';\nimport * as React from 'react';\n\n/**\n * Initialization options for the LaunchDarkly React SDK. These are in addition to the options exposed\n * by [[LDOptions]] which are common to both the JavaScript and React SDKs.\n */\nexport interface LDReactOptions {\n  /**\n   * Whether the React SDK should transform flag keys into camel-cased format.\n   * Using camel-cased flag keys allow for easier use as prop values, however,\n   * these keys won't directly match the flag keys as known to LaunchDarkly.\n   * Consequently, flag key collisions may be possible and the Code References feature\n   * will not function properly.\n   *\n   * This is true by default, meaning that keys will automatically be converted to camel-case.\n   *\n   * For more information, see the React SDK Reference Guide on\n   * [flag keys](https://docs.launchdarkly.com/sdk/client-side/react/react-web#flag-keys).\n   *\n   * @see https://docs.launchdarkly.com/sdk/client-side/react/react-web#flag-keys\n   */\n  useCamelCaseFlagKeys?: boolean;\n\n  /**\n   * Whether to send flag evaluation events when a flag is read from the `flags` object\n   * returned by the `useFlags` hook. This is true by default, meaning flag evaluation\n   * events will be sent by default.\n   */\n  sendEventsOnFlagRead?: boolean;\n}\n\n/**\n * Contains default values for the `reactOptions` object.\n */\nexport const defaultReactOptions = { useCamelCaseFlagKeys: true, sendEventsOnFlagRead: true };\n\n/**\n * Configuration object used to initialise LaunchDarkly's JS client.\n */\nexport interface ProviderConfig {\n  /**\n   * Your project and environment specific client side ID. You can find\n   * this in your LaunchDarkly portal under Account settings. This is\n   * the only mandatory property required to use the React SDK.\n   */\n  clientSideID: string;\n\n  /**\n   * A LaunchDarkly context object. If unspecified, an anonymous context\n   * with kind: 'user' will be created and used.\n   */\n  context?: LDContext;\n\n  /**\n   * @deprecated The `user` property will be removed in a future version,\n   * please update your code to use context instead.\n   */\n  user?: LDContext;\n\n  /**\n   * If set to true, the ldClient will not be initialized until the context prop has been defined.\n   */\n  deferInitialization?: boolean;\n\n  /**\n   * LaunchDarkly initialization options. These options are common between LaunchDarkly's JavaScript and React SDKs.\n   *\n   * @see https://docs.launchdarkly.com/sdk/features/config#javascript\n   */\n  options?: LDOptions;\n\n  /**\n   * Additional initialization options specific to the React SDK.\n   *\n   * @see options\n   */\n  reactOptions?: LDReactOptions;\n\n  /**\n   * If specified, `launchdarkly-react-client-sdk` will only listen for changes to these flags.\n   * Otherwise, all flags will be requested and listened to.\n   * Flag keys must be in their original form as known to LaunchDarkly rather than in their camel-cased form.\n   */\n  flags?: LDFlagSet;\n\n  /**\n   * Optionally, the ldClient can be initialized outside of the provider\n   * and passed in, instead of being initialized by the provider.\n   *\n   * Note: it should only be passed in when it has emitted the 'ready'\n   * event when using withLDProvider, to ensure that the flags are properly set.\n   * If using with asyncWithLDProvider, then it will wait internally, so\n   * it is not required that the client have emitted the 'ready' event.\n   */\n  ldClient?: LDClient | Promise<LDClient | undefined>;\n\n  /**\n   *  The amount of time, in seconds, to wait for initialization before rejecting the promise.\n   *  Using a large timeout is not recommended. If you use a large timeout and await it, then\n   *  any network delays will cause your application to wait a long time before continuing\n   *  execution. This gets passed to the underlying Javascript SDK `waitForInitialization`\n   *  function.\n   */\n  timeout?: number;\n}\n\n/**\n * Configuration object used to initialize LaunchDarkly's JS client asynchronously.\n */\nexport type AsyncProviderConfig = Omit<ProviderConfig, 'deferInitialization'> & {\n  /**\n   * @deprecated - `asyncWithLDProvider` does not support the `deferInitialization` config option because\n   * `asyncWithLDProvider` needs to be initialized at the app entry point prior to render to ensure flags and the\n   * ldClient are ready at the beginning of the app.\n   */\n  deferInitialization?: boolean;\n};\n\n/**\n * The return type of withLDProvider HOC. Exported for testing purposes only.\n *\n * @ignore\n */\nexport interface EnhancedComponent extends React.Component {\n  subscribeToChanges(ldClient: LDClient): void;\n  componentDidMount(): Promise<void>;\n  componentDidUpdate(prevProps: ProviderConfig): Promise<void>;\n}\n\n/**\n * Return type of `initLDClient`.\n */\nexport interface AllFlagsLDClient {\n  /**\n   * Contains all flags from LaunchDarkly.\n   */\n  flags: LDFlagSet;\n\n  /**\n   * An instance of `LDClient` from the LaunchDarkly JS SDK (`launchdarkly-js-client-sdk`).\n   *\n   * @see https://docs.launchdarkly.com/sdk/client-side/javascript\n   */\n  ldClient: LDClient;\n\n  /**\n   * LaunchDarkly client initialization error, if there was one.\n   */\n  error?: Error;\n}\n\n/**\n * Map of camelized flag keys to original unmodified flag keys.\n */\nexport type LDFlagKeyMap = Record<string, string>;\n\nexport * from 'launchdarkly-js-client-sdk';\n","import { createContext } from 'react';\nimport { LDClient, LDFlagSet } from 'launchdarkly-js-client-sdk';\nimport { LDFlagKeyMap } from './types';\n\n/**\n * The sdk context stored in the Provider state and passed to consumers.\n */\ninterface ReactSdkContext {\n  /**\n   * JavaScript proxy that will trigger a LDClient#variation call on flag read in order\n   * to register a flag evaluation event in LaunchDarkly. Empty {} initially\n   * until flags are fetched from the LaunchDarkly servers.\n   */\n  flags: LDFlagSet;\n\n  /**\n   * Map of camelized flag keys to their original unmodified form. Empty if useCamelCaseFlagKeys option is false.\n   */\n  flagKeyMap: LDFlagKeyMap;\n\n  /**\n   * An instance of `LDClient` from the LaunchDarkly JS SDK (`launchdarkly-js-client-sdk`).\n   * This will be be undefined initially until initialization is complete.\n   *\n   * @see https://docs.launchdarkly.com/sdk/client-side/javascript\n   */\n  ldClient?: LDClient;\n\n  /**\n   * LaunchDarkly client initialization error, if there was one.\n   */\n  error?: Error;\n}\n\n/**\n * @ignore\n */\nconst context = createContext<ReactSdkContext>({ flags: {}, flagKeyMap: {}, ldClient: undefined });\nconst {\n  /**\n   * @ignore\n   */\n  Provider,\n  /**\n   * @ignore\n   */\n  Consumer,\n} = context;\n\nexport { Provider, Consumer, ReactSdkContext };\nexport default context;\n","import { LDClient, LDContext, LDFlagChangeset, LDFlagSet } from 'launchdarkly-js-client-sdk';\nimport camelCase from 'lodash.camelcase';\nimport { ProviderConfig } from './types';\n\n/**\n * Helper function to get the context or fallback to classic user.\n * Safe to remove when the user property is deprecated.\n */\nexport const getContextOrUser = (config: ProviderConfig): LDContext | undefined => config.context ?? config.user;\n\n/**\n * Transforms a set of flags so that their keys are camelCased. This function ignores\n * flag keys which start with `$`.\n *\n * @param rawFlags A mapping of flag keys and their values\n * @return A transformed `LDFlagSet` with camelCased flag keys\n */\nexport const camelCaseKeys = (rawFlags: LDFlagSet) => {\n  const flags: LDFlagSet = {};\n  for (const rawFlag in rawFlags) {\n    // Exclude system keys\n    if (rawFlag.indexOf('$') !== 0) {\n      flags[camelCase(rawFlag)] = rawFlags[rawFlag];\n    }\n  }\n\n  return flags;\n};\n\n/**\n * Gets the flags to pass to the provider from the changeset.\n *\n * @param changes the `LDFlagChangeset` from the ldClient onchange handler.\n * @param targetFlags if targetFlags are specified, changes to other flags are ignored and not returned in the\n * flattened `LDFlagSet`\n * @return an `LDFlagSet` with the current flag values from the LDFlagChangeset filtered by `targetFlags`. The returned\n * object may be empty `{}` if none of the targetFlags were changed.\n */\nexport const getFlattenedFlagsFromChangeset = (\n  changes: LDFlagChangeset,\n  targetFlags: LDFlagSet | undefined,\n): LDFlagSet => {\n  const flattened: LDFlagSet = {};\n  for (const key in changes) {\n    if (!targetFlags || targetFlags[key] !== undefined) {\n      flattened[key] = changes[key].current;\n    }\n  }\n\n  return flattened;\n};\n\n/**\n * Retrieves flag values.\n *\n * @param ldClient LaunchDarkly client\n * @param targetFlags If specified, `launchdarkly-react-client-sdk` will only listen for changes to these flags.\n * Flag keys must be in their original form as known to LaunchDarkly rather than in their camel-cased form.\n *\n * @returns an `LDFlagSet` with the current flag values from LaunchDarkly filtered by `targetFlags`.\n */\nexport const fetchFlags = (ldClient: LDClient, targetFlags?: LDFlagSet) => {\n  const allFlags = ldClient.allFlags();\n  if (!targetFlags) {\n    return allFlags;\n  }\n\n  return Object.keys(targetFlags).reduce<LDFlagSet>((acc, key) => {\n    acc[key] = Object.prototype.hasOwnProperty.call(allFlags, key) ? allFlags[key] : targetFlags[key];\n\n    return acc;\n  }, {});\n};\n\n/**\n * @deprecated The `camelCaseKeys.camelCaseKeys` property will be removed in a future version,\n * please update your code to use the `camelCaseKeys` function directly.\n */\ncamelCaseKeys.camelCaseKeys = camelCaseKeys;\n\nexport default { camelCaseKeys, getFlattenedFlagsFromChangeset, fetchFlags };\n","import { LDFlagSet, LDClient } from 'launchdarkly-js-client-sdk';\nimport camelCase from 'lodash.camelcase';\nimport { defaultReactOptions, LDFlagKeyMap, LDReactOptions } from './types';\n\nexport default function getFlagsProxy(\n  ldClient: LDClient,\n  rawFlags: LDFlagSet,\n  reactOptions: LDReactOptions = defaultReactOptions,\n  targetFlags?: LDFlagSet,\n): { flags: LDFlagSet; flagKeyMap: LDFlagKeyMap } {\n  const filteredFlags = filterFlags(rawFlags, targetFlags);\n  const { useCamelCaseFlagKeys = true } = reactOptions;\n  const [flags, flagKeyMap = {}] = useCamelCaseFlagKeys ? getCamelizedKeysAndFlagMap(filteredFlags) : [filteredFlags];\n\n  return {\n    flags: reactOptions.sendEventsOnFlagRead ? toFlagsProxy(ldClient, flags, flagKeyMap, useCamelCaseFlagKeys) : flags,\n    flagKeyMap,\n  };\n}\n\nfunction filterFlags(flags: LDFlagSet, targetFlags?: LDFlagSet): LDFlagSet {\n  if (targetFlags === undefined) {\n    return flags;\n  }\n\n  return Object.keys(targetFlags).reduce<LDFlagSet>((acc, key) => {\n    if (hasFlag(flags, key)) {\n      acc[key] = flags[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction getCamelizedKeysAndFlagMap(rawFlags: LDFlagSet) {\n  const flags: LDFlagSet = {};\n  const flagKeyMap: LDFlagKeyMap = {};\n  for (const rawFlag in rawFlags) {\n    // Exclude system keys\n    if (rawFlag.indexOf('$') === 0) {\n      continue;\n    }\n    const camelKey = camelCase(rawFlag);\n    flags[camelKey] = rawFlags[rawFlag];\n    flagKeyMap[camelKey] = rawFlag;\n  }\n\n  return [flags, flagKeyMap];\n}\n\nfunction hasFlag(flags: LDFlagSet, flagKey: string) {\n  return Object.prototype.hasOwnProperty.call(flags, flagKey);\n}\n\nfunction toFlagsProxy(\n  ldClient: LDClient,\n  flags: LDFlagSet,\n  flagKeyMap: LDFlagKeyMap,\n  useCamelCaseFlagKeys: boolean,\n): LDFlagSet {\n  return new Proxy(flags, {\n    // trap for reading a flag value using `LDClient#variation` to trigger an evaluation event\n    get(target, prop, receiver) {\n      const currentValue = Reflect.get(target, prop, receiver);\n\n      // check if flag key exists as camelCase or original case\n      const validFlagKey =\n        (useCamelCaseFlagKeys && hasFlag(flagKeyMap, prop as string)) || hasFlag(target, prop as string);\n\n      // only process flag keys and ignore symbols and native Object functions\n      if (typeof prop === 'symbol' || !validFlagKey) {\n        return currentValue;\n      }\n\n      if (currentValue === undefined) {\n        return;\n      }\n\n      const pristineFlagKey = useCamelCaseFlagKeys ? flagKeyMap[prop] : prop;\n\n      return ldClient.variation(pristineFlagKey, currentValue);\n    },\n  });\n}\n","import { LDOptions } from 'launchdarkly-js-client-sdk';\nimport * as packageInfo from '../package.json';\n\nconst wrapperOptions: LDOptions = {\n  wrapperName: 'react-client-sdk',\n  wrapperVersion: packageInfo.version,\n  sendEventsOnlyForVariation: true,\n};\n\nexport default wrapperOptions;\n","import React, { Component, PropsWithChildren } from 'react';\nimport { initialize, LDClient, LDFlagChangeset, LDFlagSet } from 'launchdarkly-js-client-sdk';\nimport { EnhancedComponent, ProviderConfig, defaultReactOptions, LDReactOptions } from './types';\nimport { Provider } from './context';\nimport { camelCaseKeys, fetchFlags, getContextOrUser, getFlattenedFlagsFromChangeset } from './utils';\nimport getFlagsProxy from './getFlagsProxy';\nimport wrapperOptions from './wrapperOptions';\nimport ProviderState from './providerState';\n\n/**\n * The `LDProvider` is a component which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This Provider does three things:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * Because the `launchdarkly-js-client-sdk` in only initialized on `componentDidMount`, your flags and the\n * ldClient are only available after your app has mounted. This can result in a flicker due to flag changes at\n * startup time.\n *\n * This component can be used as a standalone provider. However, be mindful to only include the component once\n * within your application. This provider is used inside the `withLDProviderHOC` and can be used instead to initialize\n * the `launchdarkly-js-client-sdk`. For async initialization, check out the `asyncWithLDProvider` function\n */\nclass LDProvider extends Component<PropsWithChildren<ProviderConfig>, ProviderState> implements EnhancedComponent {\n  readonly state: Readonly<ProviderState>;\n\n  constructor(props: ProviderConfig) {\n    super(props);\n\n    const { options } = props;\n\n    this.state = {\n      flags: {},\n      unproxiedFlags: {},\n      flagKeyMap: {},\n    };\n\n    if (options) {\n      const { bootstrap } = options;\n      if (bootstrap && bootstrap !== 'localStorage') {\n        const { useCamelCaseFlagKeys } = this.getReactOptions();\n        this.state = {\n          flags: useCamelCaseFlagKeys ? camelCaseKeys(bootstrap) : bootstrap,\n          unproxiedFlags: bootstrap,\n          flagKeyMap: {},\n        };\n      }\n    }\n  }\n\n  getReactOptions = () => ({ ...defaultReactOptions, ...this.props.reactOptions });\n\n  subscribeToChanges = (ldClient: LDClient) => {\n    const { flags: targetFlags } = this.props;\n    ldClient.on('change', (changes: LDFlagChangeset) => {\n      const reactOptions = this.getReactOptions();\n      const updates = getFlattenedFlagsFromChangeset(changes, targetFlags);\n      const unproxiedFlags = {\n        ...this.state.unproxiedFlags,\n        ...updates,\n      };\n      if (Object.keys(updates).length > 0) {\n        this.setState((prevState) => ({\n          ...prevState,\n          unproxiedFlags,\n          ...getFlagsProxy(ldClient, unproxiedFlags, reactOptions, targetFlags),\n        }));\n      }\n    });\n  };\n\n  onFailed = (_ldClient: LDClient, e: Error) => {\n    this.setState((prevState) => ({ ...prevState, error: e }));\n  };\n\n  onReady = (ldClient: LDClient, reactOptions: LDReactOptions, targetFlags?: LDFlagSet) => {\n    const unproxiedFlags = fetchFlags(ldClient, targetFlags);\n    this.setState((prevState) => ({\n      ...prevState,\n      unproxiedFlags,\n      ...getFlagsProxy(ldClient, unproxiedFlags, reactOptions, targetFlags),\n    }));\n  };\n\n  prepareLDClient = async () => {\n    const { clientSideID, flags: targetFlags, options } = this.props;\n    let ldClient = await this.props.ldClient;\n    const reactOptions = this.getReactOptions();\n    let unproxiedFlags = this.state.unproxiedFlags;\n    let error: Error;\n\n    if (ldClient) {\n      unproxiedFlags = fetchFlags(ldClient, targetFlags);\n    } else {\n      const context = getContextOrUser(this.props) ?? { anonymous: true, kind: 'user' };\n      ldClient = initialize(clientSideID, context, { ...wrapperOptions, ...options });\n\n      try {\n        await ldClient.waitForInitialization(this.props.timeout);\n        unproxiedFlags = fetchFlags(ldClient, targetFlags);\n      } catch (e) {\n        error = e as Error;\n\n        if (error?.name.toLowerCase().includes('timeout')) {\n          ldClient.on('failed', this.onFailed);\n          ldClient.on('ready', () => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.onReady(ldClient!, reactOptions, targetFlags);\n          });\n        }\n      }\n    }\n    this.setState((prevState) => ({\n      ...prevState,\n      unproxiedFlags,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      ...getFlagsProxy(ldClient!, unproxiedFlags, reactOptions, targetFlags),\n      ldClient,\n      error,\n    }));\n    this.subscribeToChanges(ldClient);\n  };\n\n  async componentDidMount() {\n    const { deferInitialization } = this.props;\n    if (deferInitialization && !getContextOrUser(this.props)) {\n      return;\n    }\n\n    await this.prepareLDClient();\n  }\n\n  async componentDidUpdate(prevProps: ProviderConfig) {\n    const { deferInitialization } = this.props;\n    const contextJustLoaded = !getContextOrUser(prevProps) && getContextOrUser(this.props);\n    if (deferInitialization && contextJustLoaded) {\n      await this.prepareLDClient();\n    }\n  }\n\n  render() {\n    const { flags, flagKeyMap, ldClient, error } = this.state;\n\n    return <Provider value={{ flags, flagKeyMap, ldClient, error }}>{this.props.children}</Provider>;\n  }\n}\n\nexport default LDProvider;\n","import * as React from 'react';\nimport { defaultReactOptions, ProviderConfig } from './types';\nimport LDProvider from './provider';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\n/**\n * `withLDProvider` is a function which accepts a config object which is used to\n * initialize `launchdarkly-js-client-sdk`.\n *\n * This HOC handles passing configuration to the `LDProvider`, which does the following:\n * - It initializes the ldClient instance by calling `launchdarkly-js-client-sdk` initialize on `componentDidMount`\n * - It saves all flags and the ldClient instance in the context API\n * - It subscribes to flag changes and propagate them through the context API\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at `componentDidMount`. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n * @return A function which accepts your root React component and returns a HOC\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport function withLDProvider<T extends JSX.IntrinsicAttributes = {}>(\n  config: ProviderConfig,\n): (WrappedComponent: React.ComponentType<T>) => React.ComponentType<T> {\n  return function withLDProviderHoc(WrappedComponent: React.ComponentType<T>): React.ComponentType<T> {\n    const { reactOptions: userReactOptions } = config;\n    const reactOptions = { ...defaultReactOptions, ...userReactOptions };\n    const providerProps = { ...config, reactOptions };\n\n    function HoistedComponent(props: T) {\n      return (\n        <LDProvider {...providerProps}>\n          <WrappedComponent {...props} />\n        </LDProvider>\n      );\n    }\n\n    hoistNonReactStatics(HoistedComponent, WrappedComponent);\n\n    return HoistedComponent;\n  };\n}\n\nexport default withLDProvider;\n","import React, { useState, useEffect, ReactNode } from 'react';\nimport { initialize, LDFlagChangeset } from 'launchdarkly-js-client-sdk';\nimport { AsyncProviderConfig, defaultReactOptions } from './types';\nimport { Provider } from './context';\nimport { fetchFlags, getContextOrUser, getFlattenedFlagsFromChangeset } from './utils';\nimport getFlagsProxy from './getFlagsProxy';\nimport wrapperOptions from './wrapperOptions';\nimport ProviderState from './providerState';\n\n/**\n * This is an async function which initializes LaunchDarkly's JS SDK (`launchdarkly-js-client-sdk`)\n * and awaits it so all flags and the ldClient are ready before the consumer app is rendered.\n *\n * The difference between `withLDProvider` and `asyncWithLDProvider` is that `withLDProvider` initializes\n * `launchdarkly-js-client-sdk` at componentDidMount. This means your flags and the ldClient are only available after\n * your app has mounted. This can result in a flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` initializes `launchdarkly-js-client-sdk` at the entry point of your app prior to render.\n * This means that your flags and the ldClient are ready at the beginning of your app. This ensures your app does not\n * flicker due to flag changes at startup time.\n *\n * `asyncWithLDProvider` accepts a config object which is used to initialize `launchdarkly-js-client-sdk`.\n *\n * `asyncWithLDProvider` does not support the `deferInitialization` config option because `asyncWithLDProvider` needs\n * to be initialized at the entry point prior to render to ensure your flags and the ldClient are ready at the beginning\n * of your app.\n *\n * It returns a provider which is a React FunctionComponent which:\n * - saves all flags and the ldClient instance in the context API\n * - subscribes to flag changes and propagate them through the context API\n *\n * @param config - The configuration used to initialize LaunchDarkly's JS SDK\n */\nexport default async function asyncWithLDProvider(config: AsyncProviderConfig) {\n  const { clientSideID, flags: targetFlags, options, reactOptions: userReactOptions } = config;\n  const reactOptions = { ...defaultReactOptions, ...userReactOptions };\n  const context = getContextOrUser(config) ?? { anonymous: true, kind: 'user' };\n  let error: Error;\n  let fetchedFlags = {};\n\n  const ldClient = (await config.ldClient) ?? initialize(clientSideID, context, { ...wrapperOptions, ...options });\n  try {\n    await ldClient.waitForInitialization(config.timeout);\n    fetchedFlags = fetchFlags(ldClient, targetFlags);\n  } catch (e) {\n    error = e as Error;\n  }\n\n  const initialFlags = options?.bootstrap && options.bootstrap !== 'localStorage' ? options.bootstrap : fetchedFlags;\n\n  const LDProvider = ({ children }: { children: ReactNode }) => {\n    const [ldData, setLDData] = useState<ProviderState>(() => ({\n      unproxiedFlags: initialFlags,\n      ...getFlagsProxy(ldClient, initialFlags, reactOptions, targetFlags),\n      ldClient,\n      error,\n    }));\n\n    useEffect(() => {\n      function onChange(changes: LDFlagChangeset) {\n        const updates = getFlattenedFlagsFromChangeset(changes, targetFlags);\n        if (Object.keys(updates).length > 0) {\n          setLDData((prevState) => {\n            const updatedUnproxiedFlags = { ...prevState.unproxiedFlags, ...updates };\n\n            return {\n              ...prevState,\n              unproxiedFlags: updatedUnproxiedFlags,\n              ...getFlagsProxy(ldClient, updatedUnproxiedFlags, reactOptions, targetFlags),\n            };\n          });\n        }\n      }\n      ldClient.on('change', onChange);\n\n      function onReady() {\n        const unproxiedFlags = fetchFlags(ldClient, targetFlags);\n        setLDData((prevState) => ({\n          ...prevState,\n          unproxiedFlags,\n          ...getFlagsProxy(ldClient, unproxiedFlags, reactOptions, targetFlags),\n        }));\n      }\n\n      function onFailed(e: Error) {\n        setLDData((prevState) => ({ ...prevState, error: e }));\n      }\n\n      // Only subscribe to ready and failed if waitForInitialization timed out\n      // because we want the introduction of init timeout to be as minimal and backwards\n      // compatible as possible.\n      if (error?.name.toLowerCase().includes('timeout')) {\n        ldClient.on('failed', onFailed);\n        ldClient.on('ready', onReady);\n      }\n\n      return function cleanup() {\n        ldClient.off('change', onChange);\n        ldClient.off('failed', onFailed);\n        ldClient.off('ready', onReady);\n      };\n    }, []);\n\n    // unproxiedFlags is for internal use only. Exclude it from context.\n    const { unproxiedFlags: _, ...rest } = ldData;\n\n    return <Provider value={rest}>{children}</Provider>;\n  };\n\n  return LDProvider;\n}\n","import * as React from 'react';\nimport { Consumer, ReactSdkContext } from './context';\nimport { LDClient, LDFlagSet } from 'launchdarkly-js-client-sdk';\n\n/**\n * Controls the props the wrapped component receives from the `LDConsumer` HOC.\n */\nexport interface ConsumerOptions {\n  /**\n   * If true then the wrapped component only receives the `ldClient` instance\n   * and nothing else.\n   */\n  clientOnly: boolean;\n}\n\n/**\n * The possible props the wrapped component can receive from the `LDConsumer` HOC.\n */\nexport interface LDProps {\n  /**\n   * A map of feature flags from their keys to their values.\n   * Keys are camelCased using `lodash.camelcase`.\n   */\n  flags?: LDFlagSet;\n\n  /**\n   * An instance of `LDClient` from the LaunchDarkly JS SDK (`launchdarkly-js-client-sdk`)\n   *\n   * @see https://docs.launchdarkly.com/sdk/client-side/javascript\n   */\n  ldClient?: LDClient;\n}\n\n/**\n * withLDConsumer is a function which accepts an optional options object and returns a function\n * which accepts your React component. This function returns a HOC with flags\n * and the ldClient instance injected via props.\n *\n * @param options - If you need only the `ldClient` instance and not flags, then set `{ clientOnly: true }`\n * to only pass the ldClient prop to your component. Defaults to `{ clientOnly: false }`.\n * @return A HOC with flags and the `ldClient` instance injected via props\n */\nfunction withLDConsumer(options: ConsumerOptions = { clientOnly: false }) {\n  return function withLDConsumerHoc<P>(WrappedComponent: React.ComponentType<P & LDProps>) {\n    return (props: P) => (\n      <Consumer>\n        {({ flags, ldClient }: ReactSdkContext) => {\n          if (options.clientOnly) {\n            return <WrappedComponent ldClient={ldClient} {...props} />;\n          }\n\n          return <WrappedComponent flags={flags} ldClient={ldClient} {...props} />;\n        }}\n      </Consumer>\n    );\n  };\n}\n\nexport default withLDConsumer;\n","import { LDFlagSet } from 'launchdarkly-js-client-sdk';\nimport { useContext } from 'react';\nimport context, { ReactSdkContext } from './context';\n\n/**\n * `useFlags` is a custom hook which returns all feature flags. It uses the `useContext` primitive\n * to access the LaunchDarkly context set up by `withLDProvider`. As such you will still need to\n * use the `withLDProvider` HOC at the root of your app to initialize the React SDK and populate the\n * context with `ldClient` and your flags.\n *\n * @return All the feature flags configured in your LaunchDarkly project\n */\nconst useFlags = <T extends LDFlagSet = LDFlagSet>(): T => {\n  const { flags } = useContext<ReactSdkContext>(context);\n\n  return flags as T;\n};\n\nexport default useFlags;\n","import { useContext } from 'react';\nimport context from './context';\n\n/**\n * `useLDClient` is a custom hook which returns the underlying [LaunchDarkly JavaScript SDK client object](https://launchdarkly.github.io/js-client-sdk/interfaces/LDClient.html).\n * Like the `useFlags` custom hook, `useLDClient` also uses the `useContext` primitive to access the LaunchDarkly\n * context set up by `withLDProvider`. You will still need to use the `withLDProvider` HOC\n * to initialise the react sdk to use this custom hook.\n *\n * @return The `launchdarkly-js-client-sdk` `LDClient` object\n */\nconst useLDClient = () => {\n  const { ldClient } = useContext(context);\n\n  return ldClient;\n};\n\nexport default useLDClient;\n","import { useContext } from 'react';\nimport context from './context';\n\n/**\n * Provides the LaunchDarkly client initialization error, if there was one.\n *\n * @return The `launchdarkly-js-client-sdk` `LDClient` initialization error\n */\nexport default function useLDClientError() {\n  const { error } = useContext(context);\n\n  return error;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}